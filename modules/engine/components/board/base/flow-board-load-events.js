/*!
 * Implements element on-load callbacks for FlowBoardComponent
 */

( function ( $, mw ) {
	/**
	 * Binds element load handlers for FlowBoardComponent
	 * @param {jQuery} $container
	 * @extends FlowComponent
	 * @constructor
	 */
	function FlowBoardComponentLoadEventsMixin( $container ) {
		this.bindNodeHandlers( FlowBoardComponentLoadEventsMixin.UI.events );
	}
	OO.initClass( FlowBoardComponentLoadEventsMixin );

	FlowBoardComponentLoadEventsMixin.UI = {
		events: {
			loadHandlers: {}
		}
	};

	//
	// On element-load handlers
	//

	/**
	 * Replaces $time with a new time element generated by TemplateEngine
	 * @param {jQuery} $time
	 */
	FlowBoardComponentLoadEventsMixin.UI.events.loadHandlers.timestamp = function ( $time ) {
		$time.replaceWith(
			mw.flow.TemplateEngine.callHelper(
				'timestamp',
				parseInt( $time.attr( 'datetime' ), 10) * 1000,
				$time.data( 'time-ago-only' ) === "1"
			)
		);
	};

	/**
	 * Stores the load more button for use with infinite scroll.
	 * @param {jQuery} $button
	 */
	FlowBoardComponentLoadEventsMixin.UI.events.loadHandlers.loadMore = function ( $button ) {
		var flowBoard = mw.flow.getPrototypeMethod( 'board', 'getInstanceByElement' )( $button );

		if ( !flowBoard.$loadMoreNodes ) {
			// Create a new $loadMoreNodes list
			flowBoard.$loadMoreNodes = $();
		} else {
			// Remove any loadMore nodes that are no longer in the body
			flowBoard.$loadMoreNodes = flowBoard.$loadMoreNodes.filter( function () {
				return $( this ).closest( 'body' ).length;
			} );
		}

		// Store this new loadMore node
		flowBoard.$loadMoreNodes = flowBoard.$loadMoreNodes.add( $button );
	};

	/**
	 * Bind the navigation header bar to the window.scroll event.
	 * @param {jQuery} $boardNavigation
	 */
	FlowBoardComponentLoadEventsMixin.UI.events.loadHandlers.boardNavigation = function ( $boardNavigation ) {
		this.on( 'scroll', _flowBoardAdjustTopicNavigationHeader, [ $boardNavigation ] );

		// The topic navigation header becomes fixed to the window beyond its position
		_flowBoardAdjustTopicNavigationHeader( $boardNavigation, {} );
	};

	//
	// Private functions
	//

	/**
	 * On window.scroll, we clone the nav header bar and fix it to the window top.
	 * We clone so that we have an original which always remains in the same place for calculation purposes,
	 * as it can vary depending on whether or not new content is rendered or the window is resized.
	 * @param {jQuery} $boardNavigation
	 * @param {Event} event
	 */
	function _flowBoardAdjustTopicNavigationHeader( $boardNavigation, event ) {
		var $clone = $boardNavigation.data( 'flowScrollClone' ),
			boardNavigationPosition = $boardNavigation.offset();

		if ( window.scrollY <= boardNavigationPosition.top ) {
			// Board nav is still in view; don't affix it
			if ( $clone ) {
				// Remove the old clone if it exists
				$clone.remove();
				$boardNavigation.removeData( 'flowScrollClone' );
			}
			return;
		}

		if ( !$clone ) {
			// Make a new clone
			$clone = $boardNavigation.clone( true );
			$clone
				.addClass( 'flow-board-navigation-affixed' )
				.removeClass( 'flow-load-interactive' );
			$boardNavigation
				// Store this
				.data( 'flowScrollClone', $clone )
				// Insert it
				.after( $clone );
		}

		// The only thing that needs calculating is its left offset
		if ( $clone.css( 'left' ) !== boardNavigationPosition.left ) {
			$clone.css( {
				left: boardNavigationPosition.left
			} );
		}
	}

	// Mixin to FlowBoardComponent
	mw.flow.mixinComponent( 'board', FlowBoardComponentLoadEventsMixin );
}( jQuery, mediaWiki ) );
