{
  "comments": [
    {
      "key": {
        "uuid": "ee14bf34_70b076d8",
        "filename": "includes/Templating.php",
        "patchSetId": 10
      },
      "lineNbr": 200,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Haven\u0027t looked much at the patches this depends on, but this should return the same, I guess:\n\n    SummaryCollection::newFromId( $root-\u003egetPostId() )-\u003egetLastRevision();",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_f0a486a0",
        "filename": "includes/TermsOfUse.php",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Variable shouldn\u0027t start with uppercase",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_50c7b24a",
        "filename": "includes/TermsOfUse.php",
        "patchSetId": 10
      },
      "lineNbr": 50,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Variable shouldn\u0027t start with uppercase",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_b0396ef1",
        "filename": "modules/base/action.js",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "I would suggest a getAction() method, that has a default implementation in base.js like this:\n\n    mw.flow.action.prototype.getAction() \u003d function() {\n        if ( this.action ) {\n            return this.action;\n        }\n\n        throw \u0027Action not yet implemented\u0027;\n    }\n\n...\n\nThen again, some base.js code also uses some properties that it just assumes to be there (like this.object) but may not be. It\u0027s a shame we can\u0027t have abstract classes or interfaces here ^^",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_963e6286",
        "filename": "modules/base/ext.flow.base.js",
        "patchSetId": 10
      },
      "lineNbr": 230,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "Perhaps split this up into 2 seperate functions, 1 for multi, 1 for single block?",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_3039decb",
        "filename": "modules/base/images/closed_active.svg",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Minify the SVG files:\n\n$ npm install -g svgo\n$ svgo -f modules/base/images --disable\u003dremoveXMLProcInst",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_9b1d6b69",
        "filename": "modules/discussion/post.js",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Is there a particular reason not to have this one as this.$container anymore? If not, I\u0027d prefer to still have it as this.$container (see comment below)",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_7b573706",
        "filename": "modules/discussion/post.js",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "This will now find this node a second time. It\u0027s relatively fast (id-based), but could be avoided if we still have $container be publicly accessible from the object.\n\nWe could then just do this, without the node having to be found in DOM again:\n\n    this.$container \u003d object.$container;",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_1b95db89",
        "filename": "modules/discussion/post.js",
        "patchSetId": 10
      },
      "lineNbr": 251,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Same remark; perhaps change to:\n\n    this.$container \u003d object.$container;",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_96b9c2e8",
        "filename": "modules/discussion/topic.js",
        "patchSetId": 10
      },
      "lineNbr": 42,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "This can probably be done in the shared constructor, which is called by all implementing actions (see coment below about how to call parent)",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_16f6d2c2",
        "filename": "modules/discussion/topic.js",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "Looks like the only difference between close/summarize/reopen is this.action. The other 3 are exactly the same for all 3 actions.\n\nThese 3 other lines can just be moved to summarizebase constructor, then these 3 can just call parent (not entirely certain this work the same for constructors, but I guess so)\n\n    mw.flow.action.topic.summarizebase \u003d function( topic ) {\n        this.object \u003d topic;\n        this.$container \u003d $( \u0027.flow-element-container:first\u0027, $( \u0027#flow-topic-\u0027 + this.object.topicId ) );\n    \n        this.initialize(); // ... or just have all code in initialize() in here too ;)\n    };\n    \n    mw.flow.action.topic.close \u003d function( topic ) {\n        this.action \u003d \u0027close\u0027;\n\n        // call parent constructor\n        mw.flow.action.topic.summarizebase.call( this, topic );\n    };",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_96aae2cf",
        "filename": "modules/discussion/topic.js",
        "patchSetId": 10
      },
      "lineNbr": 410,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "Same remark: this.$container \u003d object.$container; ?",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_b6a9668f",
        "filename": "modules/discussion/topic.js",
        "patchSetId": 10
      },
      "lineNbr": 410,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "Same remark: this.$container \u003d object.$container; ?",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_569a0a76",
        "filename": "modules/discussion/topic.js",
        "patchSetId": 10
      },
      "lineNbr": 744,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "Same remark: this.$container \u003d object.$container; ?",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_f6591e2e",
        "filename": "modules/header/forms.js",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T16:42:49Z",
      "side": 1,
      "message": "Same remark; this.$container \u003d object.$container; ?",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_303f9e22",
        "filename": "modules/moderation/styles/moderation.less",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "Also need icon for .flow-action-reopen",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee14bf34_903aea31",
        "filename": "templates/topic.html.php",
        "patchSetId": 10
      },
      "lineNbr": 97,
      "author": {
        "id": 214
      },
      "writtenOn": "2014-03-24T14:05:11Z",
      "side": 1,
      "message": "edit-topic-summary should also be in here",
      "revId": "d582d1cf7190f53c8619e1e1577b101c181bbf11",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}