{
  "comments": [
    {
      "key": {
        "uuid": "4946a543_c4608613",
        "filename": "includes/Repository/TreeRepository.php",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 113
      },
      "writtenOn": "2013-09-20T01:02:55Z",
      "side": 1,
      "message": "RevisionStorage::backingStoreFindMulti() is using the result as an array.",
      "revId": "b31e41cec7948fcf14c84b8a3e2a0d80f4018c42",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_045e0e74",
        "filename": "includes/Repository/TreeRepository.php",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 113
      },
      "writtenOn": "2013-09-20T01:02:55Z",
      "side": 1,
      "message": "$db-\u003eselect() always returns a ResultWrapper object, it would not be false equivalent",
      "revId": "b31e41cec7948fcf14c84b8a3e2a0d80f4018c42",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_5e437d45",
        "filename": "includes/Repository/TreeRepository.php",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 776
      },
      "writtenOn": "2013-09-20T20:44:18Z",
      "side": 1,
      "message": "Hmm, i looked through the code, and it seems it can return both?  \n\nhttps://git.wikimedia.org/blob/mediawiki%2Fcore/102ea093f12a7484003083b9a5cac35d61834f42/includes%2Fdb%2FDatabase.php#L3353\n\nMaybe should be the following?\n    \n    if ( !$res || !$res-\u003evalid() )",
      "parentUuid": "4946a543_045e0e74",
      "revId": "b31e41cec7948fcf14c84b8a3e2a0d80f4018c42",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_5ece1d85",
        "filename": "includes/Repository/TreeRepository.php",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 113
      },
      "writtenOn": "2013-09-20T21:41:20Z",
      "side": 1,
      "message": "I did not notice the result could be false if error is ignored, :(\n\nI think if ( $res \u003d\u003d\u003d false ) is fine unless you want to consider empty result as error.  I guess that shouldn\u0027t be the case? it just means a tree doesnâ€™t have any subtree?",
      "parentUuid": "4946a543_5e437d45",
      "revId": "b31e41cec7948fcf14c84b8a3e2a0d80f4018c42",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_5eca9d51",
        "filename": "includes/Repository/TreeRepository.php",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 113
      },
      "writtenOn": "2013-09-20T21:56:29Z",
      "side": 1,
      "message": "probably throw an exception in here if there is a ignored db error, then the method caller doesn\u0027t have to check against different types",
      "parentUuid": "4946a543_5ece1d85",
      "revId": "b31e41cec7948fcf14c84b8a3e2a0d80f4018c42",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_30025574",
        "filename": "includes/Repository/TreeRepository.php",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 776
      },
      "writtenOn": "2013-09-23T17:29:16Z",
      "side": 1,
      "message": "I suppose i\u0027ve been indecisive in regards to error handling within Flow,  we are split between some functions that return false and others that return only proper values and thrown exeptions.\n\nMy experience with exceptions is that its very difficult to understand all the possible execution paths, just about any function you call can short-circuit the expected execution path.\n\nOn the other hand returning false from various places makes it very easy to forget checking the return value and receive a fatal error due to trying to use boolean false as an object/array/etc.\n\nThere is one more method of handling errors that I like, but only have minimal experience with.  In functional programming many languages have a \"Maybe\" return type, which is essentially an object that represents a return value.  We don\u0027t get the type-safe guarantee of all error conditions being handled, but we would get the benefit that all call sites which receive the object \n\nFor a php implementation that would could pull into /vendor, look at https://github.com/schmittjoh/php-option .  I think mediawiki might already have something similar, but I can\u0027t remember the name.  Opinions?",
      "parentUuid": "4946a543_5eca9d51",
      "revId": "b31e41cec7948fcf14c84b8a3e2a0d80f4018c42",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}