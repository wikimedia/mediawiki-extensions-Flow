{
  "comments": [
    {
      "key": {
        "uuid": "6ec1af18_b2746ccd",
        "filename": "Hooks.php",
        "patchSetId": 30
      },
      "lineNbr": 1624,
      "author": {
        "id": 214
      },
      "writtenOn": "2015-08-31T13:40:29Z",
      "side": 1,
      "message": "This check only works if BETA_FEATURE_FLOW_USER_TALK_PAGE is in $wgBetaFeaturesWhitelist. Otherwise it always returns false.\n\nI had missed that.\nMaybe we should get rid of $wgFlowEnableOptInBetaFeature and check in_array( BETA_FEATURE_FLOW_USER_TALK_PAGE, $wgBetaFeaturesWhitelist )? (or make sure that it\u0027s automatically added to $wgBetaFeaturesWhitelist if wgFlowEnableOptInBetaFeature \u003d\u003d\u003d true)",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_8303200f",
        "filename": "Hooks.php",
        "patchSetId": 30
      },
      "lineNbr": 1624,
      "author": {
        "id": 2488
      },
      "writtenOn": "2015-08-31T17:24:26Z",
      "side": 1,
      "message": "I guess the question is: should we use whitelisting to determine if our beta feature is available to users or not?\n\nWhilelisting is optional, it means that if we deploy a new version of Flow (after we merge the beta feature) to a wiki that doesn\u0027t use it, we would have to add and configure it to keep things the same.\n\nDoes it make sense to automatically add our self to the whitelist  when $wgFlowEnableOptInBetaFeature is true? Doesn\u0027t it defeat the purpose of a whitelist if anybody can join it?",
      "parentUuid": "6ec1af18_b2746ccd",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_23c7cc68",
        "filename": "Hooks.php",
        "patchSetId": 30
      },
      "lineNbr": 1624,
      "author": {
        "id": 214
      },
      "writtenOn": "2015-08-31T17:49:29Z",
      "side": 1,
      "message": "We can bypass whitelist and just do $user-\u003egetOption( BETA_FEATURE_FLOW_USER_TALK_PAGE ) !\u003d\u003d \u00271\u0027\n(though I\u0027m not sure we should)\n\nI just prefer not to have to rely on setting 2 globals for 2 different extensions to get a feature to work right. If we can have only 1 and take care of setting the rest ourselves, that\u0027d be better. If not, we should at least add a noticable comment near $wgFlowEnableOptInBetaFeature informing the user they may also have to set $wgBetaFeaturesWhitelist?",
      "parentUuid": "6ec1af18_8303200f",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_9e0e17e7",
        "filename": "Hooks.php",
        "patchSetId": 30
      },
      "lineNbr": 1624,
      "author": {
        "id": 2488
      },
      "writtenOn": "2015-08-31T19:19:48Z",
      "side": 1,
      "message": "I agree there should be only 1 place to set this. But in the short term I think we should at least check the whitelist and if it exists and we\u0027re not in there, we don\u0027t show our beta feature. \n\nThe impact of incomplete configuration would be that the feature is not there, not that it is there but it doesn\u0027t work.",
      "parentUuid": "6ec1af18_23c7cc68",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_1be6b43f",
        "filename": "Hooks.php",
        "patchSetId": 30
      },
      "lineNbr": 1624,
      "author": {
        "id": 214
      },
      "writtenOn": "2015-09-01T06:09:26Z",
      "side": 1,
      "message": "I agree.",
      "parentUuid": "6ec1af18_9e0e17e7",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_12ec60b7",
        "filename": "includes/Import/OptInUpdate.php",
        "patchSetId": 30
      },
      "lineNbr": 44,
      "author": {
        "id": 214
      },
      "writtenOn": "2015-08-31T13:40:29Z",
      "side": 1,
      "message": "Coding standards: { should be on same line.\nhttps://www.mediawiki.org/wiki/Manual:Coding_conventions#Indenting_and_alignment",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_4311b855",
        "filename": "includes/Import/OptInUpdate.php",
        "patchSetId": 30
      },
      "lineNbr": 44,
      "author": {
        "id": 2488
      },
      "writtenOn": "2015-08-31T17:24:26Z",
      "side": 1,
      "message": "Done\n\nCan php linting check that? I feel it\u0027s a waste of your brain to enforce it.",
      "parentUuid": "6ec1af18_12ec60b7",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_9bd1445a",
        "filename": "includes/Import/OptInUpdate.php",
        "patchSetId": 30
      },
      "lineNbr": 44,
      "author": {
        "id": 214
      },
      "writtenOn": "2015-09-01T06:09:26Z",
      "side": 1,
      "message": "I think we have some phpcs rules that should detect things like this. https://packagist.org/packages/mediawiki/mediawiki-codesniffer",
      "parentUuid": "6ec1af18_4311b855",
      "revId": "4d6290e18af523cbbabfe3af30caf34c4bddbd9d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}