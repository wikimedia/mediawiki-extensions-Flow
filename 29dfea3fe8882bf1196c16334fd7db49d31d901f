{
  "comments": [
    {
      "key": {
        "uuid": "8e96e304_a9957a37",
        "filename": "Resources.php",
        "patchSetId": 13
      },
      "lineNbr": 326,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Can this be more descriptive about what it actually does, rather than which classes extend it?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_c99a4666",
        "filename": "Resources.php",
        "patchSetId": 13
      },
      "lineNbr": 327,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "It doesn\u0027t seem like these should all be the same module. E.g. FlowBoardHistoryComponent should be part of a separate module since it only needs to load on the history page.\n\nThere are probably additional useful ways to break it up.\n\nNot a blocker",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_c93ec626",
        "filename": "Resources.php",
        "patchSetId": 13
      },
      "lineNbr": 336,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Capitalization is inconsistent with other files.  It should be flow-board-history.js.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_e91622ac",
        "filename": "Resources.php",
        "patchSetId": 13
      },
      "lineNbr": 338,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Maybe something more descriptive, like flow-initialize.js?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_ecedd023",
        "filename": "handlebars/flow_block_board-history.handlebars",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This is an actual change to the history page, right?\n\nIs this intended to be part of this commit?  If so, it should be mentioned in the commit message.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_e98b8219",
        "filename": "handlebars/flow_form_buttons.handlebars",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This should be uncommented or removed.  Same below.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_3f167c4e",
        "filename": "modules/engine/components/board/base/flow-board-api-events.js",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Return is not used for constructors.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_5fc828aa",
        "filename": "modules/engine/components/board/base/flow-board-api-events.js",
        "patchSetId": 13
      },
      "lineNbr": 155,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This really does need to be cleaned up (not in this commit, though).  E.g. could it at least always use the data-role content?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_ff69f41d",
        "filename": "modules/engine/components/board/base/flow-board-interactive-events.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_b6770e35",
        "filename": "modules/engine/components/board/base/flow-board-interactive-events.js",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Return is not used for constructors.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_629a27bf",
        "filename": "modules/engine/components/board/base/flow-board-load-events.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_568d6a35",
        "filename": "modules/engine/components/board/base/flow-board-load-events.js",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Return is not used for constructors.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_e20157ba",
        "filename": "modules/engine/components/board/base/flow-board-misc.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_76b8a6c3",
        "filename": "modules/engine/components/board/base/flow-board-misc.js",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Return is not used for constructors.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_e2b2b7e3",
        "filename": "modules/engine/components/board/base/flow-board-scroll-events.js",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This file doesn\u0027t appear to do anything.  It looks like you moved to scroll handlers into flow-board-misc.js.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_16ada280",
        "filename": "modules/engine/components/board/base/flow-board-scroll-events.js",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Return is not used for constructors.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_02b803c2",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_22c09f2e",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 8,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Is this just the root the component concerns itself with?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_a2acaf85",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Constructors should not be tagged @return, and it doesn\u0027t return a boolean.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_82c3b33c",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This doesn\u0027t seem necessary.  VE has abstract classes too, but they are not enforced like this.  See https://git.wikimedia.org/blob/mediawiki%2Fextensions%2FVisualEditor.git/af84e6c35be04eb6c029b2022965dd1ec2ea591d/modules%2Fve-mw%2Fce%2Fve.ce.MWResizableNode.js\n\nIf someone creates a standlone (non-inherited) ComponentBase, presumably they\u0027ll not get the desired effect, but they can just update their code.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_02dfa311",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Parameter should be documented.\n\nPrimitives like boolean should be lower-case",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_a2e34fd3",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 36,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "It\u0027s better to standardize on the parameter being a jQuery set (which the name implies it is) and not do this extra conversion.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_8227330d",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "retObj seems unnecessary.  It just returns an empty jQuery set unconnected to anything else.  If the caller wants that, they can call jQuery themselves.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_22d73ff4",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 40,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Yes, we should look at when we can use the event delegation functionality of $().on.\n\nProbably something along the lines of:\n\n$container.on( \"click\", selector, function() {",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_42de0be0",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "I don\u0027t think the || -1 is necessary (it\u0027s new to this version).\n\nFirst, it should never be unset (even special pages have mw.config.get( \u0027wgNamespaceNumber\u0027 ) return something, -1 in their case).\n\nEven if it were null or something, null !\u003d\u003d 2600.\n\nwgNamespaceIds is set site-wide (https://www.mediawiki.org/wiki/Manual:Interface/JavaScript#Site-wide) in the startup module, and also does not need to be conditional.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_82d413c0",
        "filename": "modules/engine/components/board/base/flow-boardandhistory-base.js",
        "patchSetId": 13
      },
      "lineNbr": 97,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove commented out code.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_e2eab772",
        "filename": "modules/engine/components/board/flow-board.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_a2e4afa4",
        "filename": "modules/engine/components/board/flow-board.js",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Constructors don\u0027t return things, they construct them.  Hence, generally no return statement.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_c2a0db40",
        "filename": "modules/engine/components/board/flow-board.js",
        "patchSetId": 13
      },
      "lineNbr": 8,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "\"If multiple, returns an array of FlowBoardComponents.\"\n\nNo it doesn\u0027t, which is good because that would be unexpected behavior for a constructor.  I know you didn\u0027t add that text in this commit, but since you\u0027re changing the doc block in other ways, could you drop it now?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_228f3fd3",
        "filename": "modules/engine/components/board/flow-board.js",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Elsewhere (flow-boardandhistory-base.js) it throws on initialization failure.\n\nII don\u0027t think the check in that file is actually necessary, but I do think in general throwing is better than returning false for a constructor.\n\nAlso, if you never return, you can drop @return entirely.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_628547b1",
        "filename": "modules/engine/components/board/flow-board.js",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "There is a dedicated way of documenting mixins (https://github.com/senchalabs/jsduck/wiki/@mixins), instead of using extend.\n\n* @mixins FlowComponentEventsMixin\n\nThis extends FlowBoardAndHistoryComponentBase, which is not documented above yet.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_fd5a5cf8",
        "filename": "modules/engine/components/board/flow-boardHistory.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_1d60689f",
        "filename": "modules/engine/components/board/flow-boardHistory.js",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove @return",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_bd54d4ca",
        "filename": "modules/engine/components/board/flow-boardHistory.js",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Renamed to FlowBoardAndHistoryComponentBase",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_dd59a002",
        "filename": "modules/engine/components/board/flow-boardHistory.js",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Is the comment because this is fleshed out in a follow-up patch?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_fd281c34",
        "filename": "modules/engine/components/common/flow-component-engines.js",
        "patchSetId": 13
      },
      "lineNbr": 17,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This line is unnecessary, since it\u0027s immediately overwritten.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_7d1c0c19",
        "filename": "modules/engine/components/common/flow-component-engines.js",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "The callback is meant to tell when storage is safe to use.  But since the code using storage is not inside (or called by something inside) the callback, this doesn\u0027t serve that purpose.\n\nHowever, we don\u0027t need to worry about it.  All the versions of IE we support for JS now have localStorage, so we can drop the callback entirely.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_3df524b6",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Remove empty comment",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_ddbd20d3",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "I wonder if there\u0027s away to avoid this check (making sure the constructor isn\u0027t called twice to begin with).",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_9dd478c0",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Document, please.  Is this the name of the event, e.g. \u0027pageLoaded\u0027?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_3de1a497",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 117,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Is the second approach for when you want to populate the returns array with a non-boolean, but also abort?\n\nThe alternative approach (which I think solves this)) would be to not accumulate return values into an array, but instead use a parameter.  For example, one of the args could be an array (or an object).  Since only the array reference is passed around, it can be mutated.\n\nThen, the only purpose of the return value would be to abort (and there would only be one way to abort) which may be simpler.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_1df06861",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Maybe this should just return an empty array (that way, the caller doesn\u0027t need to worry about types).  There is nothing inherently wrong when nothing happens to be listening.\n\nemit also says, \"What is the usefulness of the boolean return value here?\" (of course it\u0027s behavior in the listening case is also different).",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_7028ae81",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 133,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Not a blocker, but a lot of the methods here and below (e.g. bind.*Handlers, flowEventsMixinHideForm) do not seem to belong here.  Some are already commented as such.\n\nThere should be the event system (i.e. emitWithReturn, and the code it extends), then additional Flow-process specific code built on top of this in separate files/modules.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_10060a21",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 149,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This \u003d null is not necessary.  It\u0027s a local variable that is not captured.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_d362ec05",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 456,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This should be apiHandlers too, right?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_13493490",
        "filename": "modules/engine/components/common/flow-component-events.js",
        "patchSetId": 13
      },
      "lineNbr": 466,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Bug: It\u0027s copying in the wrong function for apiHandler.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_d6b3ba4a",
        "filename": "modules/engine/components/flow-component.js",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "initStorer is unused.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_b6bdceaf",
        "filename": "modules/engine/components/flow-component.js",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Can this really return a boolean?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_768c268a",
        "filename": "modules/engine/components/flow-component.js",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Don\u0027t really get why it\u0027s in multiple registries/which ones.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_9651b2df",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 4,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Per discussion, let\u0027s talk about how we can move closer to the standard OOJS component model in later changes.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_565b2afd",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This is not a blocker, but we should check if this is really necessary.\n\nThe general point of a prototype method is that you call it on an instance.  When this principle is followed (static methods are converted so they\u0027re not using the prototype syntax), this is a non-issue, since if you have an instance you can just call the instance method.\n\nThen, we need to check whether there are any valid use cases of explicitly using the prototype like this (that shouldn\u0027t just be static methods).",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_3611be08",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This is not a constructor.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_5629ea34",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 64,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "These \u0027return false\u0027 (including the other below) seem like very serious failures.  Should they throw?",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_96ff72a7",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 77,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "It\u0027s better not to call things twice like this (lookup).  It can be called, saved to a variable, checked in the if, then used again.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_16236255",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "Document parameters, please.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_16e28200",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 117,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "proxy takes care of the context, so the call/apply note is redundant.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_b6138e04",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 130,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "These like they should throw.  They indicate a code error that should be fixed ASAP.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96e304_96f532b8",
        "filename": "modules/engine/components/flow-registry.js",
        "patchSetId": 13
      },
      "lineNbr": 144,
      "author": {
        "id": 519
      },
      "writtenOn": "2014-10-17T20:49:20Z",
      "side": 1,
      "message": "This method is confusing.\n\nMixing in and extending a class are different.   It seems like it should be called mixinFlowComponent.",
      "revId": "29dfea3fe8882bf1196c16334fd7db49d31d901f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}