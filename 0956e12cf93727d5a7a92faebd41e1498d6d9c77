{
  "comments": [
    {
      "key": {
        "uuid": "20e5ac0f_20b251e6",
        "filename": "includes/Conversion/Utils.php",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 5
      },
      "writtenOn": "2019-02-12T19:41:27Z",
      "side": 1,
      "message": "I don\u0027t think this is the correct value for base-url. In Parsoid responses on mediawiki.org, I see \u003cbase href\u003d\"//www.mediawiki.org/wiki/\"\u003e, whereas wfGetServerUrl() returns \"https://www.mediawiki.org\".\n\nI also don\u0027t think PROTO_CURRENT is correct here, because it\u0027s almost never correct to use details about the current request when saving something (and the result of this function gets saved to the database, at least sometimes). I would suggest PROTO_RELATIVE instead.\n\nThe base-url attribute also isn\u0027t used anywhere yet. It should probably be remapped back into an actual \u003cbase\u003e tag in the \u003chead\u003e at some point. This could be done in JS, but I would prefer for the server to serve correct documents and for this base-url attribute to be a storage detail that\u0027s not exposed. However, that would require creating pre-storage and post-retrieval processing steps separate from the wt\u003c-\u003ehtml conversion step (which is what this function is). It\u0027s also not super urgent because, in the absence of a \u003cbase\u003e tag, ve.init.mw.Target.static.fixBase injects the correct value anyway.",
      "revId": "0956e12cf93727d5a7a92faebd41e1498d6d9c77",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25ee2547_13c17d95",
        "filename": "includes/Conversion/Utils.php",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 6097
      },
      "writtenOn": "2019-02-14T21:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20e5ac0f_20b251e6",
      "revId": "0956e12cf93727d5a7a92faebd41e1498d6d9c77",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fadba90_dbdafadb",
        "filename": "includes/Conversion/Utils.php",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 5
      },
      "writtenOn": "2019-02-12T19:41:27Z",
      "side": 1,
      "message": "This seems to me like it wouldn\u0027t be safe in the general case (there could be \u003cpre\u003e tags in the body, which is actually kinda common on mediawiki.org). Do we do newline stripping anywhere else?",
      "range": {
        "startLine": 180,
        "startChar": 14,
        "endLine": 180,
        "endChar": 36
      },
      "revId": "0956e12cf93727d5a7a92faebd41e1498d6d9c77",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd74a3a1_f0e16e13",
        "filename": "includes/Conversion/Utils.php",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 6097
      },
      "writtenOn": "2019-02-14T21:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fadba90_dbdafadb",
      "range": {
        "startLine": 180,
        "startChar": 14,
        "endLine": 180,
        "endChar": 36
      },
      "revId": "0956e12cf93727d5a7a92faebd41e1498d6d9c77",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f36c205d_b0406da4",
        "filename": "modules/flow/ui/widgets/editor/mw.flow.ui.EditorWidget.js",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 5
      },
      "writtenOn": "2019-02-12T19:41:27Z",
      "side": 1,
      "message": "Please add a comment saying this is for b/c with old stored content. Also, if we had a server-side post-retrieval processing step as I alluded to above, we could do it there instead of here.",
      "revId": "0956e12cf93727d5a7a92faebd41e1498d6d9c77",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}