{
  "comments": [
    {
      "key": {
        "uuid": "6e7c4fa4_a4d1f0fd",
        "filename": "includes/Search/TopicUpdater.php",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "should probably catch a more specific exception?  Also while i don\u0027t doubt they exist, i\u0027m left wondering why we have two different failure cases: both an exception and returning an empty array (at least i assume thats what $data \u003d\u003d\u003d false is detecting, the false retval from current() when argument is empty?)",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_6a32bf5c",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "document that this is a Connection::*_TYPE_NAME constant",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_ca2993e3",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 88,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "throw an MWExceptionHandler::logException() in here too, and perhaps $e-\u003egetMessage() into the wfWarn? basically just want to make sure we can figure out what happened",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_aaba17b4",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "based on the calling code in FlowForceSearchIndex, this is int|null",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_0ae1cbfa",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "based on the calling code, and code in this function, its also int|null. But see below.",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_4ad9032b",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 124,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "if we do keep null, this should also be a !\u003d\u003d null check so the two checks are consistent",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_2ae607e4",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "for even more fun, it looks like this one is documented to take a string not an int :)\n\n     * @var string $time timeout in Elasticsearch time format\n\nMaybe string|null, and document all of them as being \u0027timeout in Elasticsearch time format\u0027 ?",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_4a16e3ad",
        "filename": "includes/Search/Updater.php",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T06:16:39Z",
      "side": 1,
      "message": "I\u0027m not sure what to do with it, but i feel odd about overloading the \u0027type\u0027 term. \n\n$this-\u003egetType() returns a string constant\nConnection::getRevisionType() returns an Elastica\\SearchableInterface\n$bulk-\u003esetType() takes an Elastica\\Type, which implements the SearchableInterface\n\nFor them to line up, i suppose getRevisionType() should be documented to return Elastica\\Type? That still leaves the word \u0027type\u0027 overloaded, but at least it type checks.",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e76d7c5_56ea7274",
        "filename": "maintenance/FlowForceSearchIndex.php",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 776
      },
      "writtenOn": "2015-04-16T21:37:45Z",
      "side": 1,
      "message": "i\u0027m not sure what the right point to call it is, but we will want to run ObjectManager::clear() at various points through this run, otherwise the entire flow database will get sucked into memory. We could clear it on every loop, i don\u0027t think there is much shared data being loaded? Otherwise we could keep a counter of the number of times we\u0027ve looped and clear every 10 times through or some such.",
      "revId": "96f1ffedac9741f8f6d2ed833f9315d5d6d31ca4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}