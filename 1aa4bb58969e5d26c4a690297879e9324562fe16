{
  "comments": [
    {
      "key": {
        "uuid": "8ef26315_e0aab36c",
        "filename": "includes/Import/OptInController.php",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 16
      },
      "writtenOn": "2018-01-19T23:40:37Z",
      "side": 1,
      "message": "Is there a case where only one of $flowDbw and $wikiDbw would rollback? That would seem broken already if that was the case (not even counting the deferred part). If it\u0027s not, then just using one of the DBs should be enough.",
      "revId": "1aa4bb58969e5d26c4a690297879e9324562fe16",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_00b6bfd6",
        "filename": "includes/Import/OptInController.php",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-01-19T23:47:51Z",
      "side": 1,
      "message": "I\u0027m not the author but I believe this function was written specifically because only one of the DBs was being rolled back during normal error handling.",
      "parentUuid": "8ef26315_e0aab36c",
      "revId": "1aa4bb58969e5d26c4a690297879e9324562fe16",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_80c2cf37",
        "filename": "includes/Import/OptInController.php",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 2488
      },
      "writtenOn": "2018-01-20T00:01:06Z",
      "side": 1,
      "message": "That\u0027s right. Assuming the Core db is rolled back automatically at the end of the deferred because of the exception, we still need to rollback the Flow db manually.",
      "parentUuid": "8ef26315_00b6bfd6",
      "revId": "1aa4bb58969e5d26c4a690297879e9324562fe16",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_e0d8f324",
        "filename": "includes/Import/OptInController.php",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 16
      },
      "writtenOn": "2018-01-20T00:24:24Z",
      "side": 1,
      "message": "I\u0027m not asking about the \"catch\" block, which I understand, but rather the the DB parameter to MWCallableUpdate.\n\nIf several DBs are used, then a patch should be made to let MWCallableUpdate take an array of IDatabase. I suppose one use case would be when action X updates DBs A and B, sometimes only writing to one of A/B when there happen to be no table changes needed in of the the DBs. Attaching the callback to only one handle could be insufficient.",
      "parentUuid": "8ef26315_80c2cf37",
      "revId": "1aa4bb58969e5d26c4a690297879e9324562fe16",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_a0f54b81",
        "filename": "includes/Import/OptInController.php",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-01-20T00:40:36Z",
      "side": 1,
      "message": "The \"sometimes\" case is basically going to be always. If you\u0027re writing to DB A and B, then you\u0027re going to write to one of them first (say, A first then B). The write to A might fail, and if that happens you have only written to A and not to B.\n\nBut if I understand you correctly, you\u0027re saying we should patch MWCallableUpdate so that we can write the following?\n\n    DeferredUpdates::addCallableUpdate(\n        function () use ( $flowDbw, $wikiDbw, ... ) {\n            code\n        },\n        __METHOD__,\n        [ $flowDbw, $wikiDbw ]\n    );",
      "parentUuid": "8ef26315_e0d8f324",
      "revId": "1aa4bb58969e5d26c4a690297879e9324562fe16",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}