{
  "comments": [
    {
      "key": {
        "uuid": "29433135_aba629c2",
        "filename": "Flow.php",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 214
      },
      "writtenOn": "2013-09-30T12:11:08Z",
      "side": 1,
      "message": "This list may grow quite large.\n\nThe current idea (e.g. workflows) also seems to be to put the community in charge as much as possible, but this will require WMF devs in order to update/deploy the list.\n\nNot sure about the current status of the \"how to archive existing talk pages\" discussion, but perhaps we could put the community in charge of activating Flow on pages, via a workflow like this:\n\n* Move the talk page content to another page (archive)\n* Add a magic word to the talk page, which is picked up by Flow (also: this edit action will result in output caches being cleared - see comment in Hooks.php)\n* (Additionally, the magic word could accept a parameter, which could be the normalized page title where the archived discussion is, so we could read that from Flow to display/link to the archived content)\n\nNot sure this is an ideal workflow or even something we\u0027d want right now, but it\u0027d put more control in the hands of the community.",
      "revId": "95d53947092cfa7707dd019e7c1c8b1c98e788f5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29433135_bf29ff8c",
        "filename": "Flow.php",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 455
      },
      "writtenOn": "2013-09-30T22:58:58Z",
      "side": 1,
      "message": "Werdna\u0027s way of implementing this is fine for now â€“ no community members are clamoring for the power to add Flow to their talk pages just yet :) I don\u0027t imagine they will until at least November, which still gives us 2 months at least where we\u0027ll still need some method for enabling Flow on select pages.\n\nBut I agree with you, Matthias, that community members will eventually need more control. When we\u0027re closer to releasing onwiki, we can assess whether to switch to your more populist occupying method in the second release.",
      "parentUuid": "29433135_aba629c2",
      "revId": "95d53947092cfa7707dd019e7c1c8b1c98e788f5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29433135_8ba16daf",
        "filename": "Hooks.php",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 214
      },
      "writtenOn": "2013-09-30T12:11:08Z",
      "side": 1,
      "message": "I may be mistaken here, but I\u0027m pretty sure that Varnish/Squid will be a PITA here; talk pages\u0027 caches will also need to be cleared before they\u0027re \"taken over\".",
      "revId": "95d53947092cfa7707dd019e7c1c8b1c98e788f5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_88e2f3d6",
        "filename": "includes/UrlGenerator.php",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 776
      },
      "writtenOn": "2013-09-26T18:26:51Z",
      "side": 1,
      "message": "I would prefer state to be received through the constructor, rather than just reaching out into global state.  The reason for this is basically whats called the \"open/closed principle\". We should prefer code to be open to changes in functionality while being closed to changes in code.\n\nThe simplest way to accomplish then open/closed principle is to define a 1 method interface of isTalkpageOccupied, and accepting any object matching that interface in the constructor.  That would mean any time in the future the implementation could be extended without changing FlowHooks or UrlGenerator(and potentially breaking other uses of those classes) by a new or extended class that implements the interface.\n\nI know this may seem a bit pedantic when applied to individual use cases, but when applied at a global level I have found it makes on-going maintenance of an application much easier as you can change out little pieces without as much risk in breaking related code.",
      "revId": "95d53947092cfa7707dd019e7c1c8b1c98e788f5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4946a543_08cfe357",
        "filename": "includes/View.php",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 776
      },
      "writtenOn": "2013-09-26T18:26:51Z",
      "side": 1,
      "message": "needs type hint for first parameter, primarily as documentation for future editors working on this code.",
      "revId": "95d53947092cfa7707dd019e7c1c8b1c98e788f5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}